{"ast":null,"code":"var _jsxFileName = \"/home/agustin/Escritorio/Proyects/Django/jobSearchApp/frontend/src/components/Cards/Cards.jsx\",\n  _s = $RefreshSig$();\nimport Card from \"../Card/Card\";\nimport Filters from \"../Filters/Filters\";\nimport style from \"./Cards.module.css\";\nimport Pagination from \"../Pagination/Pagination\";\nimport { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { set_current_page } from \"../../redux/actions/actions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Cards() {\n  _s();\n  const dispatch = useDispatch();\n  // Las razas se obtienen desde el estado global de redux \"breeds\"\n  const breeds = useSelector(state => state.breeds);\n\n  // Estos estados sirven para el paginado\n  const currentPage = useSelector(state => state.currentPage);\n  const [breedsPerPage] = useState(8);\n\n  // Con estas variables calculamos y definimos las breeds que iran apareciendo en cada pagina\n  const indexOfLastBreed = currentPage * breedsPerPage;\n  const indexOfFirstBreed = indexOfLastBreed - breedsPerPage;\n  const currentBreeds = breeds.slice(indexOfFirstBreed, indexOfLastBreed);\n  const totalPages = Math.ceil(breeds.length / breedsPerPage);\n\n  // Sera la que ejecute el cambio de pagina cada vez que se clickea en un numero del pagiando.\n  // Se la pasa por props al componente paginate\n  const paginate = page => {\n    // console.log(totalPages);\n    // console.log(page);\n\n    dispatch(set_current_page(page % (totalPages + 1)));\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Filters, {\n      totalPages: totalPages\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Pagination, {\n      totalPages: totalPages,\n      paginate: paginate,\n      currentPage: currentPage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: style.cardsContainer,\n      children: currentBreeds.map(breed => /*#__PURE__*/_jsxDEV(Card, {\n        id: breed.id,\n        image: breed.image,\n        name: breed.name,\n        weight: breed.weight,\n        temperament: breed.temperament\n      }, breed.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(Cards, \"sjofe0Inxu2hjVec3IawssI2eKQ=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n_c = Cards;\nvar _c;\n$RefreshReg$(_c, \"Cards\");","map":{"version":3,"names":["Card","Filters","style","Pagination","useState","useDispatch","useSelector","set_current_page","jsxDEV","_jsxDEV","Fragment","_Fragment","Cards","_s","dispatch","breeds","state","currentPage","breedsPerPage","indexOfLastBreed","indexOfFirstBreed","currentBreeds","slice","totalPages","Math","ceil","length","paginate","page","children","fileName","_jsxFileName","lineNumber","columnNumber","className","cardsContainer","map","breed","id","image","name","weight","temperament","_c","$RefreshReg$"],"sources":["/home/agustin/Escritorio/Proyects/Django/jobSearchApp/frontend/src/components/Cards/Cards.jsx"],"sourcesContent":["import Card from \"../Card/Card\";\nimport Filters from \"../Filters/Filters\";\nimport style from \"./Cards.module.css\";\nimport Pagination from \"../Pagination/Pagination\";\nimport { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { set_current_page } from \"../../redux/actions/actions\";\n\nexport default function Cards() {\n  const dispatch = useDispatch();\n  // Las razas se obtienen desde el estado global de redux \"breeds\"\n  const breeds = useSelector((state) => state.breeds);\n\n  // Estos estados sirven para el paginado\n  const currentPage = useSelector((state) => state.currentPage);\n\n  const [breedsPerPage] = useState(8);\n\n  // Con estas variables calculamos y definimos las breeds que iran apareciendo en cada pagina\n  const indexOfLastBreed = currentPage * breedsPerPage;\n  const indexOfFirstBreed = indexOfLastBreed - breedsPerPage;\n  const currentBreeds = breeds.slice(indexOfFirstBreed, indexOfLastBreed);\n  const totalPages = Math.ceil(breeds.length / breedsPerPage);\n\n  // Sera la que ejecute el cambio de pagina cada vez que se clickea en un numero del pagiando.\n  // Se la pasa por props al componente paginate\n  const paginate = (page) => {\n    // console.log(totalPages);\n    // console.log(page);\n\n    dispatch(set_current_page(page % (totalPages + 1)));\n  };\n  return (\n    <>\n      <Filters totalPages={totalPages} />\n      <Pagination\n        totalPages={totalPages}\n        paginate={paginate}\n        currentPage={currentPage}\n      />\n      <div className={style.cardsContainer}>\n        {currentBreeds.map((breed) => (\n          <Card\n            key={breed.id}\n            id={breed.id}\n            image={breed.image}\n            name={breed.name}\n            weight={breed.weight}\n            temperament={breed.temperament}\n          />\n        ))}\n      </div>\n    </>\n  );\n}\n"],"mappings":";;AAAA,OAAOA,IAAI,MAAM,cAAc;AAC/B,OAAOC,OAAO,MAAM,oBAAoB;AACxC,OAAOC,KAAK,MAAM,oBAAoB;AACtC,OAAOC,UAAU,MAAM,0BAA0B;AACjD,SAASC,QAAQ,QAAQ,OAAO;AAChC,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SAASC,gBAAgB,QAAQ,6BAA6B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE/D,eAAe,SAASC,KAAKA,CAAA,EAAG;EAAAC,EAAA;EAC9B,MAAMC,QAAQ,GAAGT,WAAW,CAAC,CAAC;EAC9B;EACA,MAAMU,MAAM,GAAGT,WAAW,CAAEU,KAAK,IAAKA,KAAK,CAACD,MAAM,CAAC;;EAEnD;EACA,MAAME,WAAW,GAAGX,WAAW,CAAEU,KAAK,IAAKA,KAAK,CAACC,WAAW,CAAC;EAE7D,MAAM,CAACC,aAAa,CAAC,GAAGd,QAAQ,CAAC,CAAC,CAAC;;EAEnC;EACA,MAAMe,gBAAgB,GAAGF,WAAW,GAAGC,aAAa;EACpD,MAAME,iBAAiB,GAAGD,gBAAgB,GAAGD,aAAa;EAC1D,MAAMG,aAAa,GAAGN,MAAM,CAACO,KAAK,CAACF,iBAAiB,EAAED,gBAAgB,CAAC;EACvE,MAAMI,UAAU,GAAGC,IAAI,CAACC,IAAI,CAACV,MAAM,CAACW,MAAM,GAAGR,aAAa,CAAC;;EAE3D;EACA;EACA,MAAMS,QAAQ,GAAIC,IAAI,IAAK;IACzB;IACA;;IAEAd,QAAQ,CAACP,gBAAgB,CAACqB,IAAI,IAAIL,UAAU,GAAG,CAAC,CAAC,CAAC,CAAC;EACrD,CAAC;EACD,oBACEd,OAAA,CAAAE,SAAA;IAAAkB,QAAA,gBACEpB,OAAA,CAACR,OAAO;MAACsB,UAAU,EAAEA;IAAW;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACnCxB,OAAA,CAACN,UAAU;MACToB,UAAU,EAAEA,UAAW;MACvBI,QAAQ,EAAEA,QAAS;MACnBV,WAAW,EAAEA;IAAY;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1B,CAAC,eACFxB,OAAA;MAAKyB,SAAS,EAAEhC,KAAK,CAACiC,cAAe;MAAAN,QAAA,EAClCR,aAAa,CAACe,GAAG,CAAEC,KAAK,iBACvB5B,OAAA,CAACT,IAAI;QAEHsC,EAAE,EAAED,KAAK,CAACC,EAAG;QACbC,KAAK,EAAEF,KAAK,CAACE,KAAM;QACnBC,IAAI,EAAEH,KAAK,CAACG,IAAK;QACjBC,MAAM,EAAEJ,KAAK,CAACI,MAAO;QACrBC,WAAW,EAAEL,KAAK,CAACK;MAAY,GAL1BL,KAAK,CAACC,EAAE;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAMd,CACF;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA,eACN,CAAC;AAEP;AAACpB,EAAA,CA9CuBD,KAAK;EAAA,QACVP,WAAW,EAEbC,WAAW,EAGNA,WAAW;AAAA;AAAAqC,EAAA,GANT/B,KAAK;AAAA,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}